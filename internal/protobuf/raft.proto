syntax = "proto3";

option go_package = "github.com/jmsadair/raft/internal/protobuf";

message LogEntry {
  uint64 index  = 1;
  uint64 term   = 2;
  int64  offset = 3;
  bytes  data   = 4;
  enum LogEntryType {
    LOG_ENTRY_TYPE_NOOP_UNSPECIFIED = 0;
    LOG_ENTRY_TYPE_OPERATION        = 1;
  }
  LogEntryType entry_type = 5;
}

message AppendEntriesRequest {
  string            leader_id      = 1;
  uint64            term           = 2;
  uint64            leader_commit  = 3;
  uint64            prev_log_index = 4;
  uint64            prev_log_term  = 5;
  repeated LogEntry entries        = 6;
}

message AppendEntriesResponse {
  uint64 term    = 1;
  uint64 index   = 2;
  bool   success = 3;
}

message RequestVoteRequest {
  string candidate_id   = 1;
  uint64 term           = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term  = 4;
}

message RequestVoteResponse {
  uint64 term         = 1;
  bool   vote_granted = 2;
}

message InstallSnapshotRequest {
  uint64 term                = 1;
  string leader              = 2;
  uint64 last_included_index = 3;
  uint64 last_included_term  = 4;
  int64  offset              = 5;
  bytes  data                = 6;
  bool   done                = 7;
}

message InstallSnapshotResponse {
  uint64 term          = 1;
  int64  bytes_written = 2;
}

message StorageState {
  uint64 term      = 1;
  string voted_for = 2;
}

message Configuration {
  map<string, string> peers = 1;
}

service Raft {
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
  rpc InstallSnapshot(InstallSnapshotRequest) returns (InstallSnapshotResponse) {}
}
